@inject TasksClient TaskClient
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<div class="modal fade text-dark" id="@GetModalId(Task)" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel">@title</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" data-bs-dismiss="modal" @onclick="@ConfirmAsync">Delete</button>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public TodoTask? Task { get; set; }
    [Parameter]
    public EventCallback<bool> OnDeleteCompleted { get; set; }

    private string title = string.Empty;

    protected override void OnParametersSet()
    {
        title = $"Delete {Task?.Title}?";
    }


    public static string GetModalId(TodoTask? task)
    {
        ArgumentNullException.ThrowIfNull(task);
        return $"deleteModal-{task.Id}";
    }

    private async Task ConfirmAsync()
    {
        await TaskClient.DeleteTaskAsync(Task!.Id);
        await OnDeleteCompleted.InvokeAsync(true);
        NavigationManager.Refresh();
    }

}
